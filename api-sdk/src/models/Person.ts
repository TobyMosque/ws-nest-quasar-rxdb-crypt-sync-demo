/* tslint:disable */
/* eslint-disable */
/**
 * People example
 * The people API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Person
 */
export interface Person {
    /**
     * 
     * @type {string}
     * @memberof Person
     */
    personId: string;
    /**
     * 
     * @type {string}
     * @memberof Person
     */
    firstName: string;
    /**
     * 
     * @type {string}
     * @memberof Person
     */
    lastName: string;
    /**
     * 
     * @type {string}
     * @memberof Person
     */
    gender: string;
    /**
     * 
     * @type {string}
     * @memberof Person
     */
    email: string;
    /**
     * 
     * @type {boolean}
     * @memberof Person
     */
    deleted: boolean;
    /**
     * 
     * @type {Date}
     * @memberof Person
     */
    updatedAt: Date;
}

/**
 * Check if a given object implements the Person interface.
 */
export function instanceOfPerson(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "personId" in value;
    isInstance = isInstance && "firstName" in value;
    isInstance = isInstance && "lastName" in value;
    isInstance = isInstance && "gender" in value;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "deleted" in value;
    isInstance = isInstance && "updatedAt" in value;

    return isInstance;
}

export function PersonFromJSON(json: any): Person {
    return PersonFromJSONTyped(json, false);
}

export function PersonFromJSONTyped(json: any, ignoreDiscriminator: boolean): Person {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'personId': json['personId'],
        'firstName': json['firstName'],
        'lastName': json['lastName'],
        'gender': json['gender'],
        'email': json['email'],
        'deleted': json['deleted'],
        'updatedAt': (new Date(json['updatedAt'])),
    };
}

export function PersonToJSON(value?: Person | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'personId': value.personId,
        'firstName': value.firstName,
        'lastName': value.lastName,
        'gender': value.gender,
        'email': value.email,
        'deleted': value.deleted,
        'updatedAt': (value.updatedAt.toISOString()),
    };
}

