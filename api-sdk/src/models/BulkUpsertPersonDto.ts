/* tslint:disable */
/* eslint-disable */
/**
 * People example
 * The people API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Person } from './Person';
import {
    PersonFromJSON,
    PersonFromJSONTyped,
    PersonToJSON,
} from './Person';

/**
 * 
 * @export
 * @interface BulkUpsertPersonDto
 */
export interface BulkUpsertPersonDto {
    /**
     * 
     * @type {Array<Person>}
     * @memberof BulkUpsertPersonDto
     */
    people: Array<Person>;
}

/**
 * Check if a given object implements the BulkUpsertPersonDto interface.
 */
export function instanceOfBulkUpsertPersonDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "people" in value;

    return isInstance;
}

export function BulkUpsertPersonDtoFromJSON(json: any): BulkUpsertPersonDto {
    return BulkUpsertPersonDtoFromJSONTyped(json, false);
}

export function BulkUpsertPersonDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): BulkUpsertPersonDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'people': ((json['people'] as Array<any>).map(PersonFromJSON)),
    };
}

export function BulkUpsertPersonDtoToJSON(value?: BulkUpsertPersonDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'people': ((value.people as Array<any>).map(PersonToJSON)),
    };
}

